@use "sass:map";
@use "@angular/material" as mat;

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, "primary");
  $primary-color: mat.get-color-from-palette($primary-palette, 500);
}

@mixin typography($theme) {
  $typography-config: mat.get-typography-config($theme);
  $font-family: mat.font-family($typography-config);
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);

  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);

  @if $typography-config != null {
    @include typography($theme);
  }

  .mat-button-base {
    --button-height: 4rem;
    font-size: 1.6rem;
    text-transform: uppercase;
    letter-spacing: 1.25px;

    &.medium {
      --button-height: 4rem;
    }

    &.mat-button,
    &.mat-icon-button,
    &.mat-stroked-button,
    &.mat-flat-button {
      height: var(--button-height);
      line-height: var(--button-height);
      max-height: initial;
      border-radius: 0.4rem;
      padding: 0 3rem;

      .mat-button-wrapper {
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1.2rem;

        strong {
          margin: 0 0.5em;

          &:last-child {
            margin-right: 0;
          }
        }

        .mat-icon {
          --size: 2.4rem;
          display: flex;
          min-width: var(--size);
          width: var(--size);
          height: var(--size);
          line-height: var(--size);

          &:first-child {
            margin-right: auto;
          }

          &:last-child {
            margin-left: auto;
          }
        }
      }

      &.shadow {
        box-shadow: var(--shadow-button);
      }

      &.full-width {
        width: 100%;
      }

      &.rounded {
        border-radius: calc(var(--button-height) / 2);
      }
    }

    &.mat-icon-button {
      --button-height: 4rem;
      border-radius: 50%;
      padding: 0;
      width: var(--button-height);
      height: var(--button-height);

      .mat-button-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .mat-icon.small {
        --size: 1.8rem;
      }
    }

    &.mat-stroked-button:not([disabled]) {
      border-color: var(--color-electric-blue);
      background-color: var(--color-white);

      &.mat-accent {
        border-color: var(--color-green);
      }
    }

    &.link-button {
      height: auto;
      line-height: 1.4;
      padding: 0;
      font-size: inherit;

      &::after {
        content: "";
        height: 0.1rem;
        position: absolute;
        left: 0;
        right: 0;
        background-color: currentColor;
        transform: translateX(-50%) scale(0);
        transition: transform 0.3s;
      }

      &:hover {
        &:not(.mat-button-disabled) .mat-button-focus-overlay {
          opacity: 0;
        }
      }

      &:hover::after {
        transform: translateX(0) scale(1);
      }
    }
  }
}
